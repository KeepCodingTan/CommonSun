if(file("../constant.gradle").exists()){
    apply from: '../constant.gradle'
}else{
    apply from: 'constant.gradle'
}
android {
    compileSdkVersion 31
    buildToolsVersion "31.0.0"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
            abiFilters 'armeabi-v7a'
            // 还可以添加 'x86', 'x86_64'
        }
    }
    buildTypes {
        debug{
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets.main {
        jniLibs.srcDirs = ['libs']
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding = true
        dataBinding = true
    }

}

dependencies{
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    api "androidx.lifecycle:lifecycle-livedata-ktx:$project.lifecycle_version"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$project.lifecycle_version"
    api "androidx.lifecycle:lifecycle-runtime:$project.lifecycle_version"
//    api "androidx.lifecycle:lifecycle-extensions:$project.lifecycle_version"
    api "androidx.databinding:databinding-runtime:$project.databinding"
}